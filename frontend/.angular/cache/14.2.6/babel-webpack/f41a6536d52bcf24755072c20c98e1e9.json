{"ast":null,"code":"import { Observable, switchMap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../habit.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../habit-item/habit-item.component\";\nimport * as i4 from \"../habit-form/habit-form.component\";\n\nfunction HabitListComponent_app_habit_item_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-habit-item\", 2);\n  }\n\n  if (rf & 2) {\n    const habit_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"habit\", habit_r1);\n  }\n}\n\nexport class HabitListComponent {\n  constructor(habitService) {\n    this.habitService = habitService;\n  }\n\n  ngOnInit() {\n    this.habits = this.habitService.refetch.pipe(switchMap(() => this.habitService.getHabits()));\n  }\n\n  onAddHabit(newHabit) {\n    this.habitService.addHabit(newHabit).subscribe();\n  }\n\n}\n\nHabitListComponent.ɵfac = function HabitListComponent_Factory(t) {\n  return new (t || HabitListComponent)(i0.ɵɵdirectiveInject(i1.HabitService));\n};\n\nHabitListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HabitListComponent,\n  selectors: [[\"app-habit-list\"]],\n  decls: 6,\n  vars: 3,\n  consts: [[3, \"addHabit\"], [3, \"habit\", 4, \"ngFor\", \"ngForOf\"], [3, \"habit\"]],\n  template: function HabitListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Habits\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"app-habit-form\", 0);\n      i0.ɵɵlistener(\"addHabit\", function HabitListComponent_Template_app_habit_form_addHabit_2_listener($event) {\n        return ctx.onAddHabit($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"ul\");\n      i0.ɵɵtemplate(4, HabitListComponent_app_habit_item_4_Template, 1, 1, \"app-habit-item\", 1);\n      i0.ɵɵpipe(5, \"async\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(5, 1, ctx.habits));\n    }\n  },\n  dependencies: [i2.NgForOf, i3.HabitItemComponent, i4.HabitFormComponent, i2.AsyncPipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AACA,SAAcA,UAAd,EAA0BC,SAA1B,QAA2C,MAA3C;;;;;;;;;IAUMC;;;;;IAAqDA;;;;AAM3D,OAAM,MAAOC,kBAAP,CAAyB;EAG7BC,YAAoBC,YAApB,EAA8C;IAA1B;EAA8B;;EAElDC,QAAQ;IACN,KAAKC,MAAL,GAAc,KAAKF,YAAL,CAAkBG,OAAlB,CAA0BC,IAA1B,CACZR,SAAS,CAAC,MAAM,KAAKI,YAAL,CAAkBK,SAAlB,EAAP,CADG,CAAd;EAGD;;EAEDC,UAAU,CAACC,QAAD,EAAc;IACtB,KAAKP,YAAL,CAAkBQ,QAAlB,CAA2BD,QAA3B,EAAqCE,SAArC;EACD;;AAb4B;;;mBAAlBX,oBAAkBD;AAAA;;;QAAlBC;EAAkBY;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MAT3BjB;MAAIA;MAAMA;MACVA;MAAgBA;QAAA,OAAYkB,sBAAZ;MAA8B,CAA9B;MAAgClB;MAChDA;MACEA;;MACFA;;;;MADoCA;MAAAA","names":["Observable","switchMap","i0","HabitListComponent","constructor","habitService","ngOnInit","habits","refetch","pipe","getHabits","onAddHabit","newHabit","addHabit","subscribe","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/usr/src/app/src/app/habit-list/habit-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { map, Observable, switchMap } from 'rxjs';\nimport { Habit } from '../habit';\nimport { HabitService } from '../habit.service';\n\n@Component({\n  selector: 'app-habit-list',\n  template: `\n    <h2>Habits</h2>\n    <app-habit-form (addHabit)=\"onAddHabit($event)\"></app-habit-form>\n    <ul>\n      <app-habit-item *ngFor=\"let habit of habits | async\" [habit]=\"habit\"></app-habit-item>\n    </ul>\n  `,\n  styles: [\n  ]\n})\nexport class HabitListComponent implements OnInit {\n  habits!: Observable<Habit[]>\n\n  constructor(private habitService: HabitService) {}\n\n  ngOnInit(): void {\n    this.habits = this.habitService.refetch.pipe(\n      switchMap(() => this.habitService.getHabits())\n    )\n  }\n\n  onAddHabit(newHabit: any) {\n    this.habitService.addHabit(newHabit).subscribe();\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}